#!/usr/bin/env perl

use strict;
use warnings;

use FindBin;
use Path::Class;
use Getopt::Long;
use Pod::Usage;

use lib file( $FindBin::RealBin, '..', 'lib' )->stringify;
use MySQL::Sharding::Client::Prompt;
use MySQL::Sharding::Client::Output;

GetOptions(
    'config|c=s' => \my $config,
    'help'       => \my $help,
);

pod2usage if $help;

$config ||= $ENV{HOME} . "/.sharding_prompt.yml";

die "config not found $config\n" unless ( -f $config );

if (-t STDIN) {
    MySQL::Sharding::Client::Prompt->new( yaml => $config )->run;
} else {
    MySQL::Sharding::Client::Output->new( yaml => $config )->execute(<STDIN>);
}



__END__

=head1 NAME

shard_prompt - database management prompt for sharded databases.


=head1 SYNOPSIS

shard_prompt - database management prompt for sharded databases.

    $ shard_prompt --config=<path/to/config.yaml>
    $ shard_prompt < path/to.sql                   # if you output term
    $ shard_prompt --help


=head2 Options:

    --config -c <file>  : databases configfile. (default : ${HOME}/.sharding_prompt.yml).
    --help -h           : show this manual


=head2 Config file example 

    connect_infos:
      name1:
        dsn: DBI:mysql:database=dbname1;host=localhost; 
      name2:
        dsn: DBI:mysql:database=dbname2;host=localhost; 
        user: username
        password: password 
        options:
          RaiseError: 1
      name3:
        dsn: DBI:mysql:database=dbname3;host=localhost; 
    
    user:     root
    password: ''
    pre_commands:
      - set names utf8
      - set sql_big_selects=1 


